name: End-to-End Tests

on:
  push:
    branches: [main]
  pull_request:

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  # android:
  #   # Android emulator said to perform best with macos HAXM
  #   runs-on: macos-latest
  #   env:
  #     PLATFORM: android
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "12"
  #     - uses: actions/setup-java@v2
  #       with:
  #         java-version: "11"
  #         distribution: "adopt"
  #     - name: Install Global Dependencies
  #       run: yarn global add react-native-cli @sentry/cli yalc
  #     - uses: actions/cache@v2
  #       id: deps-cache
  #       with:
  #         path: |
  #           node_modules
  #           sample/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
  #     - name: Install Dependencies
  #       if: steps.deps-cache.outputs['cache-hit'] != 'true'
  #       run: yarn install

  #     - name: Build SDK
  #       run: yarn build
  #     - name: Package SDK
  #       run: yalc publish
  #     - name: Prepare sample for testing
  #       working-directory: ./sample
  #       run: sh ./scripts/prepareConfigsForTesting.sh
  #     - name: Install SDK in sample
  #       working-directory: ./sample
  #       run: yalc add @sentry/react-native
  #     - name: Install Sample Dependencies
  #       if: steps.deps-cache.outputs['cache-hit'] != 'true'
  #       working-directory: ./sample
  #       run: yarn install

  #     - name: Start Appium Server
  #       working-directory: ./sample
  #       run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
  #     - name: Run Android Emulator
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 29
  #         # All the tests need to be run in this script as the emulator is killed after this command.
  #         script: cd sample && react-native run-android --variant=release && curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions && yarn test
  #     - name: Upload Appium logs
  #       # This condition is so it uploads the logs always regardless of whether the previous step succeeded or not
  #       # otherwise it would not run if the previous step failed
  #       if: ${{ always() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: appium.android.log
  #         path: ./sample/appium.log
  ios_old:
    runs-on: macos-latest
    env:
      PLATFORM: ios
      TEST: true
      DEVICE: "iPhone 13"
      IOS_DEPLOYMENT_TARGET: 15.0
    strategy:
      # we want that the matrix keeps running, default is to cancel them if it fails.
      fail-fast: false
      matrix:
        rn_version: ["0.56.1"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Global Dependencies
        run: yarn global add react-native-cli @sentry/cli yalc
      - uses: actions/cache@v2
        id: deps-cache
        with:
          path: |
            node_modules
            sample/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs['cache-hit'] != 'true'
        run: yarn install

      - name: Build SDK
        run: yarn build
      - name: Package SDK
        run: yalc publish

      - name: Actually run the thing
        working-directory: ./e2e
        run: node prepare.js ${{ matrix.rn_version }}

      - name: Start Appium Server
        working-directory: ./e2e/app
        run: yarn run appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      - name: Build and run iOS emulator
        working-directory: ./e2e/app
        run:  |
          xcodebuild -workspace ./ios/app.xcworkspace -configuration Release -scheme app -derivedDataPath ./xc-build -destination name="${DEVICE}"
          xcrun simctl boot "${DEVICE}"
          xcrun simctl install "${DEVICE}" "./xc-build/Build/Products/Release-iphonesimulator/app.app"

      - name: Build WDA
        working-directory: ./e2e/app
        run: xcodebuild -project ./node_modules/appium-webdriveragent/WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -derivedDataPath ./xc-build -destination name="${DEVICE}" IPHONEOS_DEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET GCC_TREAT_WARNINGS_AS_ERRORS=0 COMPILER_INDEX_STORE_ENABLE=NO build

        # Ping the Appium server to make sure its running, this way if it does fail it'll be easy to tell that this step failed and not the tests
      - name: Ping Appium Server
        run: curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions

      - name: Run Tests
        working-directory: ./e2e/app
        run: yarn run jest ./tests/e2e.test.js --config jest.config.js

      - name: Upload Appium logs
        # This condition is so it uploads the logs always regardless of whether the previous step succeeded or not
        # otherwise it would not run if the previous step failed
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: appium.ios.log
          path: ./e2e/app/appium.log
